/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ../public/models/planet_collection.glb 
Author: inoii (https://sketchfab.com/inoii)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/planet-collection-d0838dea632f447183bc664e83d5f918
Title: Planet Collection
*/

import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { useRef } from "react";
import { Group } from "three";

export default function Planets(props: React.PropsWithChildren<unknown>) {
  const { nodes, materials } = useGLTF(
    "portfolio/models/planet_collection.glb",
  );

  const icePlanet = useRef<Group>(null);
  const lavaPlanet = useRef<Group>(null);
  const rockPlanet = useRef<Group>(null);
  const ringPlanet = useRef<Group>(null);
  const greenPlanet = useRef<Group>(null);

  useFrame((_, delta) => {
    if (!icePlanet.current) return;
    icePlanet.current.rotation.y += delta * 0.2;
    if (!lavaPlanet.current) return;
    lavaPlanet.current.rotation.z += delta * 0.1;
    if (!rockPlanet.current) return;
    rockPlanet.current.rotation.x += delta * 1;
    if (!ringPlanet.current) return;
    ringPlanet.current.rotation.z += delta * 0.1;
    if (!greenPlanet.current) return;
    greenPlanet.current.rotation.x += delta * 0.5;
  });

  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, Math.PI / 2]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.5}>
          <group
            position={[-300, -100, -500]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
            ref={icePlanet}
          >
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.Planet02_Ice_0.geometry
              }
              material={materials.material}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.Planet02_Snow002_0.geometry
              }
              material={materials["Snow.002"]}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.Planet02_Material004_0.geometry
              }
              material={materials["Material.004"]}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.Planet02_Treasure001_0.geometry
              }
              material={materials["Treasure.001"]}
            />
          </group>
          <group
            position={[0, -200, 300]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
            ref={lavaPlanet}
          >
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.P1_Water003_Lava001_0.geometry
              }
              material={materials["Lava.001"]}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.P1_Water003_Lava_0.geometry
              }
              material={materials.Lava}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.P1_Water003_Ground003_0.geometry
              }
              material={materials["Ground.003"]}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.P1_Water003_Rocks003_0.geometry
              }
              material={materials["Rocks.003"]}
            />
          </group>
          <group
            position={[-2000, -200, 0]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
            ref={rockPlanet}
          >
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.P1_Water001_Water002_0.geometry
              }
              material={materials["Water.002"]}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.P1_Water001_Clouds001_0.geometry
              }
              material={materials["Clouds.001"]}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.P1_Water001_HUD_G003_0.geometry
              }
              material={materials["HUD_G.003"]}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.P1_Water001_Lava002_0.geometry
              }
              material={materials["Lava.002"]}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.P1_Water001_HUD_Y002_0.geometry
              }
              material={materials["HUD_Y.002"]}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.P1_Water001_HUD_R002_0.geometry
              }
              material={materials["HUD_R.002"]}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.P1_Water001_Material008_0.geometry
              }
              material={materials["Material.008"]}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.P1_Water001_HUD_B002_0.geometry
              }
              material={materials["HUD_B.002"]}
            />
          </group>
          <group
            position={[1500, -200, 1000]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
            ref={ringPlanet}
          >
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.Icosphere021_Treewood002_0.geometry
              }
              material={materials["Tree.wood.002"]}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.Icosphere021_Clouds002_0.geometry
              }
              material={materials["Clouds.002"]}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.Icosphere021_Ground001_0.geometry
              }
              material={materials["Ground.001"]}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.Icosphere021_Sand001_0.geometry
              }
              material={materials["Sand.001"]}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.Icosphere021_Material005_0.geometry
              }
              material={materials["Material.005"]}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.Icosphere021_Rock002_0.geometry
              }
              material={materials["Rock.002"]}
            />
          </group>
          <group
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
            position={[1300, -300, -500]}
            ref={greenPlanet}
          >
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.Icosphere020_Sand002_0.geometry
              }
              material={materials["Sand.002"]}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.Icosphere020_Rocks001_0.geometry
              }
              material={materials["Rocks.001"]}
            />
            <mesh
              geometry={
                // @ts-expect-error gltfjsx doesn't type this correctly
                nodes.Icosphere020_Ground002_0.geometry
              }
              material={materials["Ground.002"]}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("portfolio/models/planet_collection.glb");
